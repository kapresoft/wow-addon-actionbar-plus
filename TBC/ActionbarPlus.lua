---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tony.
--- DateTime: 1/2/2022 5:43 PM
---
local _G, unpack, format = _G, table.unpackIt, string.format
local ADDON_NAME, LibStub  = ADDON_NAME, LibStub
local StaticPopupDialogs, StaticPopup_Show, ReloadUI, IsShiftKeyDown = StaticPopupDialogs, StaticPopup_Show, ReloadUI, IsShiftKeyDown
local ACELIB = AceLibFactory

local MAJOR, MINOR = ADDON_NAME .. '-1.0', 1 -- Bump minor on changes
local A = LibStub("AceAddon-3.0"):NewAddon(ADDON_NAME, "AceConsole-3.0", "AceEvent-3.0", "AceHook-3.0")
if not A then return end
ABP = A

local ACEDB, ACEDBO, ACECFG, ACECFGD = unpack(ACELIB:GetAddonAceLibs())
local libModules = WidgetLibFactory:GetAddonStdLibs()
local C, P, B, BF = unpack(libModules)
LogFactory:EmbedLogger(A)

function A:RegisterSlashCommands()
    self:RegisterChatCommand("abp", "OpenConfig")
end

function A:RegisterKeyBindings()
    --SetBindingClick("SHIFT-T", self:Info())
    --SetBindingClick("SHIFT-F1", BoxerButton3:GetName())
    --SetBindingClick("ALT-CTRL-F1", BoxerButton1:GetName())

    -- Warning: Replaces F5 keybinding in Wow Config
    -- SetBindingClick("F5", BoxerButton3:GetName())
    -- TODO: Configure Button 1 to be the Boxer Follow Button (or create an invisible one)
    --SetBindingClick("SHIFT-R", BoxerButton1:GetName())
end

function A:OnProfileChanged()
    self:ConfirmReloadUI()
end

function A:ConfirmReloadUI()
    if IsShiftKeyDown() then
        ReloadUI()
        return
    end
    ShowReloadUIConfirmation()
end

function A:OpenConfig(_)
    ACECFGD:Open(ADDON_NAME)
end

function A:OnUpdate()
    self:log('OnUpdate called...')
end

-----@param isEnabled boolean Current enabled state
--function A:SetAddonState(isEnabled)
--    local enabledFrames = { 'ActionbarPlusF1', 'ActionbarPlusF2' }
--    for _,fn in ipairs(enabledFrames) do
--        local f = _G[fn]
--        if type(f.ShowGroup) == 'function' then
--            if isEnabled then f:ShowGroup()
--            else f:HideGroup() end
--        end
--    end
--end
--
--function A:SetAddonEnabledState(isEnabled)
--    if isEnabled then self:Enable()
--    else self:Disable() end
--end

-- AceAddon Hook
function A:OnEnable()
    -- Log or print() doesn't work with ElvUI; works when ElvUI is disabled
    --_G['ActionbarPlusF1']:HideGroup()
    A:log('OnEnable...')
end

-- AceAddon Hook
function A:OnDisable()
    -- Log or print() doesn't work with ElvUI; works when ElvUI is disabled
    A:log('OnDisable...')
end

function A:InitDbDefaults()
    local profileName = self.db:GetCurrentProfile()
    local defaultProfile = P:CreateDefaultProfile(profileName)
    local defaults = { profile =  defaultProfile }
    self.db:RegisterDefaults(defaults)
    self.profile = self.db.profile
    if table.isEmpty(ABP_PLUS_DB.profiles[profileName]) then
        ABP_PLUS_DB.profiles[profileName] = defaultProfile
        --error(profileName .. ': ' .. table.toStringSorted(ABP_PLUS_DB.profiles[profileName]))
    end
end

function A:OnInitialize()
    -- Set up our database
    self.db = ACEDB:New(ABP_PLUS_DB_NAME)
    self.db.RegisterCallback(self, "OnProfileChanged", "OnProfileChanged")
    self.db.RegisterCallback(self, "OnProfileReset", "OnProfileChanged")
    self.db.RegisterCallback(self, "OnProfileCopied", "OnProfileChanged")
    self:InitDbDefaults()

    for _, module in ipairs(libModules) do
        module:OnInitialize{ handler = A, profile= A.profile }
    end

    local options = C:GetOptions()
    -- Register options table and slash command
    ACECFG:RegisterOptionsTable(ADDON_NAME, options, { "abp_options" })
    --cfgDialog:SetDefaultSize(ADDON_NAME, 800, 500)
    ACECFGD:AddToBlizOptions(ADDON_NAME, ADDON_NAME)

    -- Get the option table for profiles
    options.args.profiles = ACEDBO:GetOptionsTable(self.db)

    self:RegisterSlashCommands()
    self:RegisterKeyBindings()
end

-- #####################################################################################

local function AddonLoaded()
    for _, module in ipairs(libModules) do module:OnAddonLoaded() end
    A:log("%s.%s initialized", MAJOR, MINOR)
    A:printf('Available commands: /abp to open config dialog.')
    A:printf('Right-click on the button drag frame to open config dialog.')
    A:printf('More at https://kapresoft.com/wow-addon-actionbar-plus')
end

local frame = CreateFrame("Frame", ADDON_NAME .. "Frame", UIParent)
frame:SetScript("OnEvent", AddonLoaded)
frame:RegisterEvent("PLAYER_ENTERING_WORLD")

-- Temp
Profile = P
